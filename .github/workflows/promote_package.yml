name: Promote Python Package

# Triggered by a webhook from Cloudsmith (repository_dispatch event)
on:
  repository_dispatch:
    types: [package-synced]  # Webhook event triggered after synchronization

env:
  CLOUDSMITH_NAMESPACE: ${{ secrets.CLOUDSMITH_NAMESPACE }}
  CLOUDSMITH_STAGING_REPO: 'production'
  CLOUDSMITH_PRODUCTION_REPO: 'staging'
  CLOUDSMITH_SERVICE_SLUG: ${{ secrets.CLOUDSMITH_SERVICE_SLUG }}
  PACKAGE_NAME: 'example_package'  # Your actual package name

permissions:
  id-token: write

jobs:
  promote:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Install Cloudsmith CLI
      - name: Install Cloudsmith CLI
        uses: cloudsmith-io/cloudsmith-cli-action@v1.0.1
        with:
          oidc-namespace: ${{ env.CLOUDSMITH_NAMESPACE }}
          oidc-service-slug: ${{ env.CLOUDSMITH_SERVICE_SLUG }}

      # Step 2: Get package identifiers tagged as 'ready-for-production'
      - name: Find packages tagged with 'ready-for-production'
        run: |
          # Query for packages tagged as 'ready-for-production' in the staging repository
          PACKAGE_QUERY="tags:ready-for-production"
          echo "Searching for packages with tag 'ready-for-production' in the staging repository: $PACKAGE_QUERY"
          
          # Fetch all packages tagged as 'ready-for-production'
          PACKAGE_DATA=$(cloudsmith list package ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_STAGING_REPO }} -q "$PACKAGE_QUERY" -F json)
          
          # Ensure there are packages returned from the query
          if [ -z "$PACKAGE_DATA" ]; then
            echo "Error: No packages found with 'ready-for-production' tag."
            exit 1
          fi
          
          # Extract all package identifiers from the list
          PACKAGE_IDENTIFIERS=$(echo "$PACKAGE_DATA" | jq -r '.data[].identifier_perm')

          if [ -z "$PACKAGE_IDENTIFIERS" ]; then
            echo "Error: No package identifiers found in the query results."
            exit 1
          fi

          echo "Found the following package identifiers: $PACKAGE_IDENTIFIERS"

      - name: Tag packages with 'ready-for-production' (if not already tagged)
        run: |
          for IDENTIFIER in $PACKAGE_IDENTIFIERS; do
            echo "Tagging package $IDENTIFIER with 'ready-for-production' tag"
            cloudsmith package tag ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_STAGING_REPO }}/$IDENTIFIER --tags ready-for-production
          done

      # Step 4: Promote the packages to production
      - name: Promote packages to production
        run: |
          for IDENTIFIER in $PACKAGE_IDENTIFIERS; do
            echo "Promoting package with identifier $IDENTIFIER to production"
            
            # Promote each package from staging to production
            cloudsmith mv --yes \
              ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_STAGING_REPO }}/$IDENTIFIER \
              ${{ env.CLOUDSMITH_PRODUCTION_REPO }}
          done
